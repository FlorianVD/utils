import equal from './equal';
import isNotEmptyArray from './array/isNotEmpty';
import isArray from './array/is';
import isBoolean from './boolean/is';
import isDate from './date/is';
import isFunction from './function/is';
import isNumber from './number/is';
import isNumberBetween from './number/isBetween';
import isNumberBelow from './number/isBelow';
import isNumberBelowOrEqual from './number/isBelowOrEqual';
import isNumberAbove from './number/isAbove';
import isNumberAboveOrEqual from './number/isAboveOrEqual';
import isInteger from './number/isInteger';
import isIntegerBetween from './number/isIntegerBetween';
import isIntegerBelow from './number/isIntegerBelow';
import isIntegerBelowOrEqual from './number/isIntegerBelowOrEqual';
import isIntegerAbove from './number/isIntegerAbove';
import isIntegerAboveOrEqual from './number/isIntegerAboveOrEqual';
import isRegExp from './regexp/is';
import isObject from './object/is';
import isNotEmptyObject from './object/isNotEmpty';
import isString from './string/is';
import isStringBetween from './string/isBetween';
import isNotEmptyString from './string/isNotEmpty';
declare const Is: Readonly<{
    Array: typeof isArray;
    NeArray: typeof isNotEmptyArray;
    NotEmptyArray: typeof isNotEmptyArray;
    Boolean: typeof isBoolean;
    Date: typeof isDate;
    Function: typeof isFunction;
    Num: typeof isNumber;
    NumBetween: typeof isNumberBetween;
    NumAbove: typeof isNumberAbove;
    NumAboveOrEqual: typeof isNumberAboveOrEqual;
    NumBelow: typeof isNumberBelow;
    NumBelowOrEqual: typeof isNumberBelowOrEqual;
    NumGt: typeof isNumberAbove;
    NumGte: typeof isNumberAboveOrEqual;
    NumLt: typeof isNumberBelow;
    NumLte: typeof isNumberBelowOrEqual;
    Number: typeof isNumber;
    NumberBetween: typeof isNumberBetween;
    NumberAbove: typeof isNumberAbove;
    NumberAboveOrEqual: typeof isNumberAboveOrEqual;
    NumberBelow: typeof isNumberBelow;
    NumberBelowOrEqual: typeof isNumberBelowOrEqual;
    Int: typeof isInteger;
    IntBetween: typeof isIntegerBetween;
    IntAbove: typeof isIntegerAbove;
    IntAboveOrEqual: typeof isIntegerAboveOrEqual;
    IntBelow: typeof isIntegerBelow;
    IntBelowOrEqual: typeof isIntegerBelowOrEqual;
    IntGt: typeof isIntegerAbove;
    IntGte: typeof isIntegerAboveOrEqual;
    IntLt: typeof isIntegerBelow;
    IntLte: typeof isIntegerBelowOrEqual;
    Integer: typeof isInteger;
    IntegerBetween: typeof isIntegerBetween;
    IntegerBelow: typeof isIntegerBelow;
    IntegerBelowOrEqual: typeof isIntegerBelowOrEqual;
    IntegerAbove: typeof isIntegerAbove;
    IntegerAboveOrEqual: typeof isIntegerAboveOrEqual;
    RegExp: typeof isRegExp;
    Object: typeof isObject;
    NeObject: typeof isNotEmptyObject;
    NotEmptyObject: typeof isNotEmptyObject;
    String: typeof isString;
    StringBetween: typeof isStringBetween;
    NeString: typeof isNotEmptyString;
    NotEmptyString: typeof isNotEmptyString;
    Equal: typeof equal;
    Eq: typeof equal;
}>;
export default Is;
